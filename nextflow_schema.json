{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/JaneliaSciComp/easifish/master/nextflow_schema.json",
    "title": "JaneliaSciComp/easifish pipeline parameters",
    "description": "Lightsheet microscopy image reconstruction",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "indir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The directory where the input images are located (or where they will be cached once they are downloaded). If undefined, it defaults to <outdir>/input",
                    "fa_icon": "fas fa-folder-open"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. ",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                }
            }
        },
        "data_options": {
            "title": "Data Ingestion",
            "type": "object",
            "description": "Describe your input data that lives in the `input` directory",
            "properties": {
                "channels": {
                    "type": "string",
                    "fa_icon": "fas fa-layer-group",
                    "description": "List of channel names to process.",
                    "help_text": "Channel names are specified in the format \"c[channel_number]\", where the channel_number is 0-indexed."
                },
                "resolution": {
                    "type": "string",
                    "fa_icon": "fas fa-file-image",
                    "pattern": "^[\\.\\d]+,[\\.\\d]+,[\\.\\d]+$",
                    "description": "Voxel resolution in all 3 dimensions. Default: 0.23,0.23,0.42",
                    "help_text": "This is a comma-delimited tuple as x,y,z.",
                    "default": "0.23,0.23,0.42"
                }
            }
        },
        "stitching_options": {
            "title": "Stitching",
            "type": "object",
            "description": "Stitching options",
            "properties": {
                "skip_stitching": {
                    "type": "boolean",
                    "description": "If set skip stitching"
                },
                "stitching_result_container": {
                    "type": "string",
                    "default": "stitched.n5"
                },
                "stitching_channel": {
                    "type": "string",
                    "fa_icon": "fas fa-asterisk",
                    "default": "all",
                    "description": "Name of the channel used for stitching, e.g. 'c1' or '1'. You can also specify 'all' to use all of the channels. Default: 'all'"
                },
                "flatfield_correction": {
                    "type": "boolean",
                    "fa_icon": "fas fa-cube",
                    "description": "Apply flatfield correction before stitching? Default: false"
                },
                "darkfieldfile": {
                    "type": "string",
                    "fa_icon": "fas fa-cube",
                    "description": "Path to the precomputed darkfield file used for flatfield correction?"
                },
                "flatfieldfile": {
                    "type": "string",
                    "fa_icon": "fas fa-cube",
                    "description": "Path to the precomputed flatfield file used for flatfield correction"
                },
                "axis_mapping": {
                    "type": "string",
                    "fa_icon": "fas fa-chart-line",
                    "default": "-x,y,z",
                    "description": "Axis mapping for the objective->pixel coordinates conversion. Default: -x,y,z",
                    "help_text": "Comma-separated axis specification with optional flips."
                },
                "stitching_block_size": {
                    "type": "string",
                    "fa_icon": "fas fa-cube",
                    "default": "128,128,64",
                    "pattern": "^\\d+,\\d+,\\d+$",
                    "description": "Block size to use when converting input data to n5 before stitching. Default: 128,128,64"
                },
                "final_block_size_xy": {
                    "type": "integer",
                    "fa_icon": "far fa-square",
                    "description": "Block size (in Z dimension) when retiling after stitching. Default: 64",
                    "help_text": "This must be smaller than the number of Z slices in the data.",
                    "default": 512
                },
                "stitching_mode": {
                    "type": "string",
                    "fa_icon": "fas fa-braille",
                    "description": "Rematching mode ('full' or 'incremental'). Default: incremental",
                    "hidden": true,
                    "default": "incremental"
                },
                "stitching_padding": {
                    "type": "string",
                    "fa_icon": "fas fa-expand",
                    "description": "Padding for the overlap regions. Default: 0,0,0",
                    "default": "0,0,0"
                },
                "stitching_blur_sigma": {
                    "type": "integer",
                    "fa_icon": "fas fa-border-style",
                    "description": "Sigma value of the gaussian blur pre-applied to the images before stitching. Default: 2",
                    "default": 2
                },
                "stitching_dir": {
                    "type": "string",
                    "description": "Directory containing intermediate stitching results"
                },
                "spark_cluster": {
                    "type": "boolean",
                    "fa_icon": "fas fa-cube",
                    "description": "Use a distributed cluster to run Spark jobs? Default: false",
                    "help": "By default, the Spark jobs will execute in a standalone Spark instance running as a single job. If you enable this option, a transient Spark cluster will be created on multiple nodes (controlled by the options below).",
                    "default": true
                },
                "spark_workers": {
                    "type": "integer",
                    "fa_icon": "fas fa-cogs",
                    "description": "Number of Spark workers to use for stitching one acquisition. Default: 10",
                    "default": 10
                },
                "min_spark_workers": {
                    "type": "integer",
                    "fa_icon": "fas fa-cogs",
                    "description": "Minimum number of Spark workers needed to start stitching pipeline. Default: 5",
                    "default": 5
                },
                "spark_worker_cores": {
                    "type": "integer",
                    "fa_icon": "fas fa-microchip",
                    "description": "Number of cores allocated to each Spark worker. Default: 4",
                    "default": 1
                },
                "spark_gb_per_core": {
                    "type": "integer",
                    "fa_icon": "fas fa-cog",
                    "description": "Size of memory (in GB) that is allocated for each core of a Spark worker. Default: 4",
                    "help_text": "The total memory usage for stitching one acquisition will be workers * worker_cores * gb_per_core. ",
                    "default": 15
                },
                "spark_driver_cores": {
                    "type": "integer",
                    "fa_icon": "fas fa-microchip",
                    "description": "Number of cores allocated for the Spark driver. Default: 1",
                    "default": 1
                },
                "spark_driver_mem_gb": {
                    "type": "integer",
                    "fa_icon": "fas fa-memory",
                    "description": "Amount of memory to allocate for the Spark driver. Default: 12g",
                    "default": 12
                },
                "stitching_result_dir": {
                    "type": "string",
                    "description": "Directory containing final stitching results"
                },
                "spark_local_dir": {
                    "type": "string",
                    "fa_icon": "fas fa-folder-open",
                    "description": "Temporary local folder for Spark processing. Must exist on all cluster nodes. Default: /tmp/spark-${workflow.sessionId}"
                }
            },
            "fa_icon": "far fa-map"
        },
        "registration": {
            "title": "Registration",
            "type": "object",
            "description": "Registration options",
            "default": "",
            "properties": {
                "bigstream_config": {
                    "type": "string",
                    "default": "conf/bigstream_config.yml",
                    "description": "Location of the YAML bigstream configuration",
                    "hidden": true
                },
                "registration_fix_id": {
                    "type": "string",
                    "description": "ID of the fix image used for registration"
                },
                "fix_global_subpath": {
                    "type": "string",
                    "hidden": true,
                    "description": "Explicit fix image dataset used for global registration"
                },
                "mov_global_subpath": {
                    "type": "string",
                    "hidden": true,
                    "description": "Explicit moving image dataset used for global registration"
                },
                "reg_ch": {
                    "type": "string",
                    "default": "c1",
                    "description": "Reference channel used for registration"
                },
                "reuse_global_affine": {
                    "type": "boolean",
                    "default": true,
                    "description": "If True and global affine exists, reuse it"
                },
                "fix_mask_descriptor": {
                    "type": "string",
                    "description": "tuple that describes fix max"
                },
                "mov_mask_descriptor": {
                    "type": "string",
                    "description": "tuple that describes mov max"
                },
                "global_steps": {
                    "type": "string",
                    "default": "affine",
                    "hidden": true,
                    "description": "Global steps - if not set they are read from the bigstream config"
                },
                "global_scale": {
                    "type": "string",
                    "default": "s3",
                    "description": "Scale used for global registration"
                },
                "fix_local_subpath": {
                    "type": "string",
                    "hidden": true,
                    "description": "Fix dataset used for local registration"
                },
                "mov_local_subpath": {
                    "type": "string",
                    "hidden": true,
                    "description": "Moving dataset used for local registration"
                },
                "global_fix_mask_subpath": {
                    "type": "string"
                },
                "global_mov_mask": {
                    "type": "string"
                },
                "global_mov_mask_subpath": {
                    "type": "string"
                },
                "local_fix_mask": {
                    "type": "string"
                },
                "local_fix_mask_subpath": {
                    "type": "string"
                },
                "local_mov_mask": {
                    "type": "string"
                },
                "local_mov_mask_subpath": {
                    "type": "string"
                },
                "local_deform_cpus": {
                    "type": "integer",
                    "default": 1
                },
                "local_deform_mem_gb": {
                    "type": "integer",
                    "default": 0
                },
                "local_steps": {
                    "type": "string",
                    "default": "affine,deform",
                    "description": "Steps for local alignment - if not set they are read from bigstream config yaml",
                    "hidden": true
                },
                "local_scale": {
                    "type": "string",
                    "default": "s2",
                    "description": "Scale used for local registration"
                },
                "deform_subpath": {
                    "type": "string",
                    "hidden": true,
                    "description": "subpath used for saving the deformation field"
                },
                "warped_subpaths": {
                    "type": "string",
                    "description": "explicit datasets to be warped",
                    "hidden": true
                },
                "with_dask_cluster": {
                    "type": "boolean",
                    "default": true,
                    "description": "If true use a distributed dask cluster"
                },
                "dask_config": {
                    "type": "string",
                    "default": "conf/dask_config.yml",
                    "description": "Dask cluster configuration",
                    "hidden": true
                },
                "warped_channels": {
                    "type": "string",
                    "hidden": true,
                    "description": "Channels to be warped"
                },
                "warped_scales": {
                    "type": "string",
                    "default": "s0",
                    "description": "All scales that need to be warped"
                },
                "global_align_cpus": {
                    "type": "integer",
                    "default": 3,
                    "hidden": true,
                    "description": "Number of CPUs used for global registration"
                },
                "global_align_mem_gb": {
                    "type": "integer",
                    "default": 0,
                    "description": "Memory for global alignment",
                    "hidden": true
                },
                "local_align_cpus": {
                    "type": "integer",
                    "default": 1,
                    "description": "CPUs used for local alignment driver",
                    "hidden": true
                },
                "local_align_mem_gb": {
                    "type": "integer",
                    "default": 0,
                    "description": "Memory (GB) used for local alignment driver",
                    "hidden": true
                },
                "local_align_workers": {
                    "type": "integer",
                    "default": 10,
                    "description": "Number of workers used for local alignment"
                },
                "local_align_min_workers": {
                    "type": "integer",
                    "default": 1,
                    "description": "Minimum number of workers that need to be available before the local alignment starts"
                },
                "local_align_worker_cpus": {
                    "type": "integer",
                    "default": 3,
                    "description": "Number of CPUs for each worker"
                },
                "local_align_worker_mem_gb": {
                    "type": "integer",
                    "default": 0,
                    "description": "Memory for each worker",
                    "hidden": true
                },
                "bigstream_local_blocksize": {
                    "type": "string",
                    "hidden": true,
                    "description": "Local alignment processing block size"
                },
                "bigstream_local_overlap_factor": {
                    "type": "number",
                    "default": 0,
                    "hidden": true,
                    "description": "Block overlap used for local alignment"
                },
                "bigstream_inv_iterations": {
                    "type": "integer",
                    "default": 5,
                    "hidden": true,
                    "description": "Iterations for generating the inverse deformation field"
                },
                "bigstream_inv_order": {
                    "type": "integer",
                    "default": 2,
                    "hidden": true,
                    "description": "Parameter for generating the inverse deformation field"
                },
                "bigstream_inv_sqrt_iterations": {
                    "type": "integer",
                    "default": 5,
                    "hidden": true
                },
                "skip_deformations": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "If true skip deformations"
                },
                "bigstream_dashboard_port": {
                    "type": "integer",
                    "default": 0,
                    "description": "Bigstream dask dashboard port - if 0 the scheduler will pick a port that is available. The typical port used by the dask dashboard is 8787"
                },
                "bigstream_scheduler_port": {
                    "type": "integer",
                    "default": 0,
                    "description": "Bigstream dask scheduler port - if 0 the scheduler will pick a port that is available. The typical port for the dask scheduler is 8786"
                },
                "bigstream_dask_cluster_max_tasks": {
                    "type": "integer",
                    "default": 0,
                    "hidden": true,
                    "description": "Total number of concurrent dask tasks"
                },
                "registration_result_container": {
                    "type": "string",
                    "default": "registration.n5",
                    "description": "Name of the final registration container"
                },
                "global_fix_mask": {
                    "type": "string"
                }
            },
            "help_text": "Registration parameters"
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "lsf_queue_size": {
                    "type": "integer",
                    "default": 500,
                    "description": "Nextflow queue when submitting tasks to LSF",
                    "hidden": true
                },
                "default_mem_gb_per_cpu": {
                    "type": "integer",
                    "default": 15,
                    "description": "Default memory per core",
                    "hidden": true
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 500,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "1024.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|d|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "multiscale": {
            "title": "Multiscale",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "skip_multiscale": {
                    "type": "boolean",
                    "description": "If true skip multiscale"
                },
                "multiscale_with_spark_cluster": {
                    "type": "boolean",
                    "default": true,
                    "description": "Use a spark cluster for multiscale"
                },
                "multiscale_min_spark_workers": {
                    "type": "integer",
                    "default": 1,
                    "description": "Minimum number of spark workers for multiscale"
                },
                "multiscale_spark_workers": {
                    "type": "integer",
                    "default": 1,
                    "description": "Number of spark workers for multiscale"
                },
                "multiscale_spark_worker_cores": {
                    "type": "integer",
                    "default": 3,
                    "description": "Number of cores for the multiscale spark workers"
                },
                "multiscale_spark_gb_per_core": {
                    "type": "integer",
                    "default": 15,
                    "description": "Number of GB per cpu"
                },
                "multiscale_spark_driver_cores": {
                    "type": "integer",
                    "default": 1,
                    "description": "Number of cpus for the multiscale driver"
                },
                "multiscale_spark_driver_mem_gb": {
                    "type": "integer",
                    "default": 1
                },
                "multiscale_resolution": {
                    "type": "string",
                    "default": "0.23,0.23,0.42",
                    "description": "Resolution used for multiscale"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "validationShowHiddenParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "validationFailUnrecognisedParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters fails when an unrecognised parameter is found.",
                    "hidden": true,
                    "help_text": "By default, when an unrecognised parameter is found, it returns a warinig."
                },
                "validationLenientMode": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters in lenient more.",
                    "hidden": true,
                    "help_text": "Allows string values that are parseable as numbers or booleans. For further information see [JSONSchema docs](https://github.com/everit-org/json-schema#lenient-mode)."
                },
                "workdir": {
                    "type": "string",
                    "default": "work",
                    "description": "work directory"
                },
                "user_id": {
                    "type": "integer",
                    "description": "user id - defaults to `id -u`",
                    "default": 0,
                    "hidden": true
                },
                "group_id": {
                    "type": "integer",
                    "description": "user group id - defaults to `id -g`",
                    "hidden": true,
                    "default": 0
                },
                "singularity_cache_dir": {
                    "type": "string",
                    "default": "$HOME/.singularity_cache",
                    "description": "cache directory for singularity images",
                    "hidden": true
                },
                "runtime_opts": {
                    "type": "string",
                    "description": "container run options"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/data_options"
        },
        {
            "$ref": "#/definitions/stitching_options"
        },
        {
            "$ref": "#/definitions/registration"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/multiscale"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}
